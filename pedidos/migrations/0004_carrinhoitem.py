# Generated by Django 5.2.7 on 2025-10-15 19:53

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('pedidos', '0003_pagamento'),
        ('produtos', '0002_avaliacao'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CarrinhoItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(blank=True, db_index=True, help_text='Chave da sessão para carrinho anônimo', max_length=40, null=True)),
                ('quantidade', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('criado_em', models.DateTimeField(auto_now_add=True)),
                ('atualizado_em', models.DateTimeField(auto_now=True)),
                ('produto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carrinho_itens', to='produtos.produto')),
                ('usuario', models.ForeignKey(blank=True, help_text='Usuário autenticado (null para carrinho anônimo)', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='carrinho_itens', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Item do Carrinho',
                'verbose_name_plural': 'Itens do Carrinho',
                'ordering': ['criado_em'],
                'indexes': [models.Index(fields=['usuario', 'produto'], name='pedidos_car_usuario_8a3799_idx'), models.Index(fields=['session_key', 'produto'], name='pedidos_car_session_3cd99a_idx'), models.Index(fields=['criado_em'], name='pedidos_car_criado__634433_idx')],
                'constraints': [models.UniqueConstraint(condition=models.Q(('usuario__isnull', False)), fields=('usuario', 'produto'), name='unique_usuario_produto'), models.UniqueConstraint(condition=models.Q(('session_key__isnull', False)), fields=('session_key', 'produto'), name='unique_session_produto'), models.CheckConstraint(condition=models.Q(('usuario__isnull', False), ('session_key__isnull', False), _connector='OR'), name='usuario_ou_session_obrigatorio')],
            },
        ),
    ]
